/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Controladores;

import Modelos.FiguraEstandar;
import Modelos.Imagen;
import java.awt.event.KeyEvent;

/**
 *
 * @author Santiago D
 */
public class Inicio extends javax.swing.JFrame implements Runnable{

    Thread procesoJuego;
    Thread tiempo;
    Imagen jugador;
    int j = 0;
    double alturaMax;
    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        this.setSize(1300, 748);
        this.setResizable(false);
        
        this.jugador = new Imagen("src/Imagenes/StandingR.png", 600, 504, 90, 86);
        
        
        FiguraEstandar suelo = new FiguraEstandar(0,583, 20, 1200);
        this.jugador.setMaquina(false);
        FiguraEstandar suelo1 = new FiguraEstandar(0,420, 20, 327);
        FiguraEstandar suelo2 = new FiguraEstandar(548,420, 20, 513);
        FiguraEstandar suelo3 = new FiguraEstandar(159,276, 20, 257);
        FiguraEstandar suelo4 = new FiguraEstandar(727,276, 20, 92);
        FiguraEstandar suelo5 = new FiguraEstandar(1046,276, 20, 238);
        FiguraEstandar suelo6 = new FiguraEstandar(0,132, 20, 92);
        FiguraEstandar suelo7 = new FiguraEstandar(286,132, 20, 217);
        FiguraEstandar suelo8 = new FiguraEstandar(798,132, 20, 758);
        this.lienzo.setVisible(false);
        this.lienzo.getMisFiguras().add(jugador);
        this.lienzo.getMisFiguras().add(suelo);
        this.lienzo.getMisFiguras().add(suelo1);
        this.lienzo.getMisFiguras().add(suelo2);
        this.lienzo.getMisFiguras().add(suelo3);
        this.lienzo.getMisFiguras().add(suelo4);
        this.lienzo.getMisFiguras().add(suelo5);
        this.lienzo.getMisFiguras().add(suelo6);
        this.lienzo.getMisFiguras().add(suelo7);
        this.lienzo.getMisFiguras().add(suelo8);
        
        this.setFocusable(true);
        alturaMax = this.jugador.getY()-((2440)/(2*6.6));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lienzo = new Controladores.Lienzo();
        time = new javax.swing.JLabel();
        intro = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
                KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lienzo.setBackground(new java.awt.Color(255, 255, 255));
        lienzo.setOpaque(false);
        lienzo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        time.setFont(new java.awt.Font("OCR A Std", 0, 27)); // NOI18N
        time.setForeground(new java.awt.Color(255, 185, 5));
        lienzo.add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 5, 120, 40));

        getContentPane().add(lienzo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 1200, 630));

        intro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/intro.png"))); // NOI18N
        getContentPane().add(intro, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 710));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if(this.lienzo.isIsPlaying()){
            switch (evt.getKeyCode()) {
                case KeyEvent.VK_RIGHT -> {
                    if(this.jugador.getEstado().equals("suelo")){
                        if(this.jugador.getDireccion().equals("derecha")){
                            System.out.println(this.jugador.getUrl());
                            if(this.j == 0){
                                this.jugador.setUrl("src/Imagenes/StandingR.png");
                            }else if(this.j ==1){
                                this.jugador.setUrl("src/Imagenes/wk1.png");                            
                            }else if(this.j == 2){
                               this.jugador.setUrl("src/Imagenes/wk2.png"); 
                            }else if(this.j == 3){
                                this.jugador.setUrl("src/Imagenes/wk3.png");
                            }else if(this.j == 4){
                                this.jugador.setUrl("src/Imagenes/wk4.png");
                            }else if(this.j == 5){
                                this.jugador.setUrl("src/Imagenes/wk5.png");
                            }else if(this.j == 6){
                                this.jugador.setUrl("src/Imagenes/wk6.png");
                            }else if(this.j == 7){
                                this.jugador.setUrl("src/Imagenes/wk7.png");
                                this.j = 0;
                            }
                            
                        }else if(this.jugador.getDireccion().equals("izquierda")){
                            this.jugador.setDireccion("derecha");
                            this.jugador.setUrl("src/Imagenes/StandingR.png");
                        }   
                        if(this.jugador.getX()+this.jugador.getAncho()+15 <= this.lienzo.getWidth()){
                            this.jugador.moverDE(10);
                        }
                    }
                    j++;
                }
                case KeyEvent.VK_LEFT -> {
                    if(this.jugador.getDireccion().equals("derecha")){
                        this.jugador.setDireccion("izquierda");
                        this.jugador.setUrl("src/Imagenes/StandingL.png");
                    }else{
                        switch (j) {
                            case 0 -> this.jugador.setUrl("src/Imagenes/StandingL.png");
                            case 1 -> this.jugador.setUrl("src/Imagenes/wk8.png");
                            case 2 -> this.jugador.setUrl("src/Imagenes/wk9.png");
                            case 3 -> this.jugador.setUrl("src/Imagenes/wk10.png");
                            case 4 -> this.jugador.setUrl("src/Imagenes/wk11.png");
                            case 5 -> this.jugador.setUrl("src/Imagenes/wk12.png");
                            case 6 -> this.jugador.setUrl("src/Imagenes/wk13.png");
                            case 7 -> this.jugador.setUrl("src/Imagenes/wk14.png");
                            default -> j = 0;
                        }
                    }   
                    if(this.jugador.getX()-10 >= 0){
                        this.jugador.moverIZ(10);
                    }
                    j++;
                }
                case KeyEvent.VK_UP -> {                   
                    if(this.jugador.getEstado().equals("suelo")){
                        this.jugador.setEstado("aire");
                        this.jugador.setAire("subida");                        
                    }
                    this.jugador.moverAR(1);
                }
                default -> {
                }
            }
        }        
    }//GEN-LAST:event_formKeyPressed

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        if(evt.getKeyChar() == KeyEvent.VK_ENTER){
            if(!this.lienzo.isIsPlaying()){
                this.procesoJuego = new Thread(this.lienzo);
                this.lienzo.setIsPlaying(true);
                this.procesoJuego.start();
                this.tiempo = new Thread(this);
                this.tiempo.start();
                this.lienzo.setVisible(true);
                intro.setVisible(false);
            }
            this.setFocusable(true);
        }
    }//GEN-LAST:event_formKeyTyped

    private void KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_KeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased

    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Inicio().setVisible(true);
        });
    }
    
   public void actualizarTiempo(){
       this.time.setText(""+this.lienzo.getSegundos()+"."+this.lienzo.getI());
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel intro;
    private javax.swing.JLabel jLabel1;
    private Controladores.Lienzo lienzo;
    private javax.swing.JLabel time;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while(this.lienzo.isIsPlaying()){
            actualizarTiempo();
            mover();
            esperar(2);
        }
    }
    
    public String verificarColision(FiguraEstandar jugador){
        String colision = "no colisiona";
        int i = 0;
        while(i < this.lienzo.getMisFiguras().size() && colision.equals("no colisiona")){
            FiguraEstandar actual = this.lienzo.getMisFiguras().get(i);
            if(jugador!= actual){
                if(jugador.getY()+jugador.getAlto() == actual.getY() && (actual.getX() + actual.getAncho() >= jugador.getX() && jugador.getX() + jugador.getAncho() >= actual.getX())){
                    colision = "abajo";
                }else if(jugador.getY() == actual.getY() + actual.getAlto() && (actual.getX() + actual.getAncho() >= jugador.getX() && jugador.getX() + jugador.getAncho() >= actual.getX())){
                    colision = "arriba";
                }else{
                    colision = "no colisiona";
                }
            }            
            i++;
        }
        return colision;
    }
    public void mover(){
        for(FiguraEstandar actual: this.lienzo.getMisFiguras()){
            if(actual instanceof FiguraEstandar){
                if(!actual.isMaquina()){
                    String respuesta = verificarColision(actual);
                    //System.out.println(respuesta);
                    if(this.jugador.getEstado().equals("aire") || respuesta.equals("no colisiona")){                    
                        if(this.jugador.getAire().equals("subida") && (!respuesta.equals("arriba") && this.jugador.getY() - 1 >= alturaMax)){
                            this.jugador.moverAR(1);
                            if(this.jugador.getDireccion().equals("derecha")){
                                if(this.jugador.getX() + this.jugador.getAncho() + 1 < this.lienzo.getWidth()){
                                    this.jugador.moverDE(1); 
                                    this.jugador.setUrl("src/Imagenes/slt1.png");
                                }
                            }else{
                                if(this.jugador.getX() - 1 > 0){
                                    this.jugador.moverIZ(1);
                                    this.jugador.setUrl("src/Imagenes/sl3.png");
                                }                            
                            }
                        }else if((respuesta.equals("arriba") || this.jugador.getY() - 1 <= alturaMax)&&!this.jugador.getAire().equals("bajada")){
                            this.jugador.setAire("bajada");
                            this.jugador.moverAB(1);
                        }else if(this.jugador.getAire().equals("bajada") && !respuesta.equals("abajo")){                                              
                            this.jugador.moverAB(1);
                            if(this.jugador.getDireccion().equals("derecha")){
                                if(this.jugador.getX() + this.jugador.getAncho() + 1 < this.lienzo.getWidth()){
                                    this.jugador.moverDE(1);
                                    this.jugador.setUrl("src/Imagenes/slt2.png");
                                }   
                            }else{
                                if(this.jugador.getX() - 1 > 0){
                                    this.jugador.moverIZ(1);
                                    this.jugador.setUrl("src/Imagenes/sl4.png");
                                }                            
                            }
                        }else if (respuesta.equals("abajo")){
                            if(this.jugador.getDireccion().equals("derecha")){
                                this.jugador.setUrl("src/Imagenes/StandingR.png");
                            }else{
                                this.jugador.setUrl("src/Imagenes/StandingL.png");
                            }
                            this.jugador.setEstado("suelo"); 
                            alturaMax = this.jugador.getY()-((2240)/(2*6.6));
                        }
                    }
                }
            }
        }
    }
    
    private void esperar(int milisegundos) {
        try {
            Thread.sleep(milisegundos);
        } catch (InterruptedException ex) {
            Thread.currentThread().interrupt();
        }
    }    
}
